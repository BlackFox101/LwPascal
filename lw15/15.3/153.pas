PROGRAM TestRemove(INPUT, OUTPUT);
<<<<<<< HEAD
{◊ËÚ‡ÂÚ ÒÚÓÍÛ ËÁ ‚ıÓ‰‡, ÔÓÔÛÒÍ‡ÂÚ ÂÂ ˜ÂÂÁ RemoveExtraBlanks}
=======
{–ß–∏—Ç–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ –≤—Ö–æ–¥–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –µ–µ —á–µ—Ä–µ–∑ RemoveExtraBlanks}
>>>>>>> 5d17a72612cba064281908573dcc2e61655938de
USES Queue;
VAR
  Ch: CHAR;
  
PROCEDURE RemoveExtraBlanks;
{–£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏e –ø—Ä–æ–±–µ–ª—ã –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ}
VAR
  Ch, Blank, LineEnd: CHAR;
BEGIN {RemoveExtraBlanks}
  Blank := ' ';
  LineEnd := '$';
  AddQ(LineEnd); {–ø–æ–º–µ—á–∞–µ–º –∫–æ–Ω–µ—Ü —Ç–µ–∫—Å—Ç–∞ –≤ –æ—á–µ—Ä–µ–¥–∏}
  HeadQ(Ch);
  {–£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã}
  WHILE Ch = Blank 
  DO
    BEGIN
      DelQ;
      HeadQ(Ch)
    END;
  WHILE Ch <> LineEnd
  DO
    BEGIN
      {—á–∏—Ç–∞–µ–º —Å–ª–æ–≤–æ}
      WHILE (Ch <> Blank) AND (Ch <> LineEnd)
      DO
       BEGIN
         AddQ(Ch);
         DelQ;
         HeadQ(Ch)
       END;
      {—É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã}
      WHILE Ch = Blank 
      DO
        BEGIN
          DelQ;
          HeadQ(Ch)
        END;
      {–í—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏}
      IF Ch <> LineEnd
       THEN
         AddQ(Blank)
    END;
  DelQ {—É–¥–∞—è–µ–º LineEnd –∏–∑ –æ—á–µ—Ä–µ–¥–∏}
END; {RemoveExtraBlanks}
 
BEGIN {TestRemove}
  EmptyQ;
  WRITE('–í—Ö–æ–¥:');
  WHILE NOT EOLN
  DO
    BEGIN
      READ(Ch);
      WRITE(Ch);
      AddQ(Ch)
    END;
  WRITELN;  
  RemoveExtraBlanks;  
  WRITE('–í—ã—Ö–æ–¥:');
  HeadQ(Ch);
  WHILE Ch <> '#'
  DO
    BEGIN
      WRITE(Ch);
      DelQ;
      HeadQ(Ch)
    END;
  WRITELN
END. {TestRemove}
